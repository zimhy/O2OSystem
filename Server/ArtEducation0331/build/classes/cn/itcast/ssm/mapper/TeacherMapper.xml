<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.ssm.mapper.TeacherMapper" >

   <!-- 根据教师的用户名来查询教师的信息 -->
    <select id="findTeacherByName"  parameterType="java.lang.String" resultType="teachercustom">
        select teacherId,password from t_teacher where teacherName=#{value}
    </select>
    
      <!-- 根据教师的id来查询教师的信息 -->
    <select id="findTeacherById"  parameterType="java.lang.Integer" resultType="teachercustom">
        select * from t_teacher where teacherId=#{value}
    </select>
    
    <!--  根据教师的邮箱或教师的用户名来查询教师的信息-->
    <select id="findTeacherByNameOrEmail" parameterType="java.lang.String" resultType="teacherCustom">
       select teacherId,password from t_teacher where teacherName=#{value} or email=#{value}
    </select>
    
    <!-- 编辑教师的认证信息 -->
    <update id="editTeacherDiplomaInfo" parameterType="teacherCustom" >
         update t_teacher
         set idPic=#{idPic},diplomaPic=#{diplomaPic},masterDiplomaPic=#{masterDiplomaPic}
         where teacherId=#{teacherId}
    </update>
    
    <!--  查询教师的课程-->
    <select id="findTeacherCourses" parameterType="java.lang.Integer" resultType="teacherCourses">
       select t_course.*
       from t_course
       where t_course.teacherId=#{value} 
    </select>
    
    <!-- 编辑教师信息 -->
    <update id="editTeacherInfo" parameterType="teacherCustom" >
        update t_teacher
        set email=#{email},teacherName=#{teacherName},realName=#{realName},gender=#{gender},teacherAge=#{teacherAge},
            idNumber=#{idNumber},preference=#{preference},education=#{education},seniority=#{seniority},phone=#{phone},
            teacherType=#{teacherType},description=#{description}
        where teacherId=#{teacherId}
    </update>
 
	<!-- 注册教师信息，并返回studentId -->
 	<insert id="insertTeacher" parameterType="Teacher" >
 	 <selectKey keyProperty="teacherId" order="AFTER" resultType="java.lang.Integer">
        SELECT LAST_INSERT_ID() 
     </selectKey>
 	    insert into t_teacher
 	    values(null,#{teacherCode},#{teacherName},#{password},#{email},#{headPortraits},#{realName},#{gender},#{teacherAge},#{preference},#{phone},#{seniority},#{organizationId},#{education},#{description},2001,#{idNumber},#{teacherType},#{idPic},#{diplomaPic},#{masterDiplomaPic})
 	</insert>

 	<insert id="insertCourse" parameterType="courseCustom">
 	 	<selectKey keyProperty="courseId" order="AFTER" resultType="java.lang.Integer">
           SELECT LAST_INSERT_ID() 
        </selectKey>
 		insert into t_course(courseCode,courseTypeId,teacherId,courseName,courseDesc,teachTime,totalStarLevel,teachAddress,
 		lessonNum,teachMethod,listenTest,coursePrice,mainImage,planStuNum,realStuNum,courseStatus) value(#{courseCode},#{courseTypeId},
 		#{teacherId},#{courseName},#{courseDesc},#{teachTime},#{totalStarLevel},#{teachAddress},
 		#{lessonNum},#{teachMethod},#{listenTest},#{coursePrice},#{mainImage},#{planStuNum},#{realStuNum},#{courseStatus})
 	</insert>
 	
 	<select id="findHistoryCourseByTeacherId" parameterType="courseCustom" resultType="courseCustom">
 		select * from t_course where teacherId = #{teacherId} and courseStatus = #{courseStatus};
 	</select>
 	
 	<update id="deleteCourseBycourseId" parameterType="java.lang.Integer">
 		update t_course set courseStatus = 1007 where courseId = #{courseId}
 	</update>
 	
 	<select id="findCourseByTeacherId" parameterType="java.lang.Integer" resultType="courseCustom">
 		select * from t_course where teacherId = #{teacherId}
 	</select>
 
</mapper>







